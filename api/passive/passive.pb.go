// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: passive.proto

package passive

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PassiveState int32

const (
	PassiveState_Stopped PassiveState = 0
	PassiveState_Running PassiveState = 1
)

// Enum value maps for PassiveState.
var (
	PassiveState_name = map[int32]string{
		0: "Stopped",
		1: "Running",
	}
	PassiveState_value = map[string]int32{
		"Stopped": 0,
		"Running": 1,
	}
)

func (x PassiveState) Enum() *PassiveState {
	p := new(PassiveState)
	*p = x
	return p
}

func (x PassiveState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PassiveState) Descriptor() protoreflect.EnumDescriptor {
	return file_passive_proto_enumTypes[0].Descriptor()
}

func (PassiveState) Type() protoreflect.EnumType {
	return &file_passive_proto_enumTypes[0]
}

func (x PassiveState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PassiveState.Descriptor instead.
func (PassiveState) EnumDescriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{0}
}

type Action int32

const (
	Action_HeartBeat Action = 0
	Action_Register  Action = 1
	Action_Enable    Action = 2
	Action_Disable   Action = 3
	Action_Online    Action = 4
	Action_Offline   Action = 5
	Action_Upload    Action = 6
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "HeartBeat",
		1: "Register",
		2: "Enable",
		3: "Disable",
		4: "Online",
		5: "Offline",
		6: "Upload",
	}
	Action_value = map[string]int32{
		"HeartBeat": 0,
		"Register":  1,
		"Enable":    2,
		"Disable":   3,
		"Online":    4,
		"Offline":   5,
		"Upload":    6,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_passive_proto_enumTypes[1].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_passive_proto_enumTypes[1]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{1}
}

type HTTPMethod int32

const (
	HTTPMethod_Unknown HTTPMethod = 0
	HTTPMethod_GET     HTTPMethod = 1
	HTTPMethod_POST    HTTPMethod = 2
	HTTPMethod_PUT     HTTPMethod = 3
	HTTPMethod_DELETE  HTTPMethod = 4
	HTTPMethod_OPTIONS HTTPMethod = 5
	HTTPMethod_PATCH   HTTPMethod = 6
	HTTPMethod_CONNECT HTTPMethod = 7
	HTTPMethod_TRACE   HTTPMethod = 8
	HTTPMethod_HEAD    HTTPMethod = 9
)

// Enum value maps for HTTPMethod.
var (
	HTTPMethod_name = map[int32]string{
		0: "Unknown",
		1: "GET",
		2: "POST",
		3: "PUT",
		4: "DELETE",
		5: "OPTIONS",
		6: "PATCH",
		7: "CONNECT",
		8: "TRACE",
		9: "HEAD",
	}
	HTTPMethod_value = map[string]int32{
		"Unknown": 0,
		"GET":     1,
		"POST":    2,
		"PUT":     3,
		"DELETE":  4,
		"OPTIONS": 5,
		"PATCH":   6,
		"CONNECT": 7,
		"TRACE":   8,
		"HEAD":    9,
	}
)

func (x HTTPMethod) Enum() *HTTPMethod {
	p := new(HTTPMethod)
	*p = x
	return p
}

func (x HTTPMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HTTPMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_passive_proto_enumTypes[2].Descriptor()
}

func (HTTPMethod) Type() protoreflect.EnumType {
	return &file_passive_proto_enumTypes[2]
}

func (x HTTPMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HTTPMethod.Descriptor instead.
func (HTTPMethod) EnumDescriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{2}
}

type UpMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassiveID uint32 `protobuf:"varint,1,opt,name=passiveID,proto3" json:"passiveID,omitempty"`
	// Types that are assignable to Msg:
	//
	//	*UpMessage_AuthMsg
	//	*UpMessage_NetMsg
	//	*UpMessage_HttpMsg
	Msg isUpMessage_Msg `protobuf_oneof:"msg"`
}

func (x *UpMessage) Reset() {
	*x = UpMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpMessage) ProtoMessage() {}

func (x *UpMessage) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpMessage.ProtoReflect.Descriptor instead.
func (*UpMessage) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{0}
}

func (x *UpMessage) GetPassiveID() uint32 {
	if x != nil {
		return x.PassiveID
	}
	return 0
}

func (m *UpMessage) GetMsg() isUpMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *UpMessage) GetAuthMsg() *AuthMsg {
	if x, ok := x.GetMsg().(*UpMessage_AuthMsg); ok {
		return x.AuthMsg
	}
	return nil
}

func (x *UpMessage) GetNetMsg() *NetMsg {
	if x, ok := x.GetMsg().(*UpMessage_NetMsg); ok {
		return x.NetMsg
	}
	return nil
}

func (x *UpMessage) GetHttpMsg() *HTTPMsg {
	if x, ok := x.GetMsg().(*UpMessage_HttpMsg); ok {
		return x.HttpMsg
	}
	return nil
}

type isUpMessage_Msg interface {
	isUpMessage_Msg()
}

type UpMessage_AuthMsg struct {
	AuthMsg *AuthMsg `protobuf:"bytes,3,opt,name=authMsg,proto3,oneof"`
}

type UpMessage_NetMsg struct {
	NetMsg *NetMsg `protobuf:"bytes,4,opt,name=netMsg,proto3,oneof"`
}

type UpMessage_HttpMsg struct {
	HttpMsg *HTTPMsg `protobuf:"bytes,5,opt,name=httpMsg,proto3,oneof"`
}

func (*UpMessage_AuthMsg) isUpMessage_Msg() {}

func (*UpMessage_NetMsg) isUpMessage_Msg() {}

func (*UpMessage_HttpMsg) isUpMessage_Msg() {}

type DownMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassiveID uint32 `protobuf:"varint,1,opt,name=passiveID,proto3" json:"passiveID,omitempty"`
	// Types that are assignable to Act:
	//
	//	*DownMessage_AuthAct
	//	*DownMessage_NetAct
	//	*DownMessage_HttpAct
	Act isDownMessage_Act `protobuf_oneof:"act"`
}

func (x *DownMessage) Reset() {
	*x = DownMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownMessage) ProtoMessage() {}

func (x *DownMessage) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownMessage.ProtoReflect.Descriptor instead.
func (*DownMessage) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{1}
}

func (x *DownMessage) GetPassiveID() uint32 {
	if x != nil {
		return x.PassiveID
	}
	return 0
}

func (m *DownMessage) GetAct() isDownMessage_Act {
	if m != nil {
		return m.Act
	}
	return nil
}

func (x *DownMessage) GetAuthAct() *AuthAct {
	if x, ok := x.GetAct().(*DownMessage_AuthAct); ok {
		return x.AuthAct
	}
	return nil
}

func (x *DownMessage) GetNetAct() *NetAct {
	if x, ok := x.GetAct().(*DownMessage_NetAct); ok {
		return x.NetAct
	}
	return nil
}

func (x *DownMessage) GetHttpAct() *HTTPAct {
	if x, ok := x.GetAct().(*DownMessage_HttpAct); ok {
		return x.HttpAct
	}
	return nil
}

type isDownMessage_Act interface {
	isDownMessage_Act()
}

type DownMessage_AuthAct struct {
	AuthAct *AuthAct `protobuf:"bytes,2,opt,name=authAct,proto3,oneof"`
}

type DownMessage_NetAct struct {
	NetAct *NetAct `protobuf:"bytes,3,opt,name=netAct,proto3,oneof"`
}

type DownMessage_HttpAct struct {
	HttpAct *HTTPAct `protobuf:"bytes,4,opt,name=httpAct,proto3,oneof"`
}

func (*DownMessage_AuthAct) isDownMessage_Act() {}

func (*DownMessage_NetAct) isDownMessage_Act() {}

func (*DownMessage_HttpAct) isDownMessage_Act() {}

type AuthAct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action Action `protobuf:"varint,1,opt,name=action,proto3,enum=passive.proto.Action" json:"action,omitempty"`
}

func (x *AuthAct) Reset() {
	*x = AuthAct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthAct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthAct) ProtoMessage() {}

func (x *AuthAct) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthAct.ProtoReflect.Descriptor instead.
func (*AuthAct) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{2}
}

func (x *AuthAct) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_HeartBeat
}

type NetAct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action Action      `protobuf:"varint,1,opt,name=action,proto3,enum=passive.proto.Action" json:"action,omitempty"`
	Data   *NetActData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NetAct) Reset() {
	*x = NetAct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetAct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetAct) ProtoMessage() {}

func (x *NetAct) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetAct.ProtoReflect.Descriptor instead.
func (*NetAct) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{3}
}

func (x *NetAct) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_HeartBeat
}

func (x *NetAct) GetData() *NetActData {
	if x != nil {
		return x.Data
	}
	return nil
}

type NetActData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Net []string `protobuf:"bytes,1,rep,name=net,proto3" json:"net,omitempty"`
}

func (x *NetActData) Reset() {
	*x = NetActData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetActData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetActData) ProtoMessage() {}

func (x *NetActData) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetActData.ProtoReflect.Descriptor instead.
func (*NetActData) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{4}
}

func (x *NetActData) GetNet() []string {
	if x != nil {
		return x.Net
	}
	return nil
}

type HTTPAct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action Action `protobuf:"varint,1,opt,name=action,proto3,enum=passive.proto.Action" json:"action,omitempty"`
}

func (x *HTTPAct) Reset() {
	*x = HTTPAct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPAct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPAct) ProtoMessage() {}

func (x *HTTPAct) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPAct.ProtoReflect.Descriptor instead.
func (*HTTPAct) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{5}
}

func (x *HTTPAct) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_HeartBeat
}

type HTTPMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session []*HTTPSession `protobuf:"bytes,1,rep,name=session,proto3" json:"session,omitempty"`
}

func (x *HTTPMsg) Reset() {
	*x = HTTPMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPMsg) ProtoMessage() {}

func (x *HTTPMsg) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPMsg.ProtoReflect.Descriptor instead.
func (*HTTPMsg) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{6}
}

func (x *HTTPMsg) GetSession() []*HTTPSession {
	if x != nil {
		return x.Session
	}
	return nil
}

type HTTPSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flow *Flow     `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
	Rr   []*HTTPRR `protobuf:"bytes,2,rep,name=rr,proto3" json:"rr,omitempty"`
}

func (x *HTTPSession) Reset() {
	*x = HTTPSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPSession) ProtoMessage() {}

func (x *HTTPSession) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPSession.ProtoReflect.Descriptor instead.
func (*HTTPSession) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{7}
}

func (x *HTTPSession) GetFlow() *Flow {
	if x != nil {
		return x.Flow
	}
	return nil
}

func (x *HTTPSession) GetRr() []*HTTPRR {
	if x != nil {
		return x.Rr
	}
	return nil
}

type Flow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sip   string `protobuf:"bytes,1,opt,name=sip,proto3" json:"sip,omitempty"`
	Dip   string `protobuf:"bytes,2,opt,name=dip,proto3" json:"dip,omitempty"`
	Sport uint32 `protobuf:"varint,3,opt,name=sport,proto3" json:"sport,omitempty"`
	Dport uint32 `protobuf:"varint,4,opt,name=dport,proto3" json:"dport,omitempty"`
}

func (x *Flow) Reset() {
	*x = Flow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flow) ProtoMessage() {}

func (x *Flow) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flow.ProtoReflect.Descriptor instead.
func (*Flow) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{8}
}

func (x *Flow) GetSip() string {
	if x != nil {
		return x.Sip
	}
	return ""
}

func (x *Flow) GetDip() string {
	if x != nil {
		return x.Dip
	}
	return ""
}

func (x *Flow) GetSport() uint32 {
	if x != nil {
		return x.Sport
	}
	return 0
}

func (x *Flow) GetDport() uint32 {
	if x != nil {
		return x.Dport
	}
	return 0
}

type HTTPRR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req *ApiAnalyzeRequest  `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Rsp *ApiAnalyzeResponse `protobuf:"bytes,2,opt,name=rsp,proto3" json:"rsp,omitempty"`
}

func (x *HTTPRR) Reset() {
	*x = HTTPRR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPRR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPRR) ProtoMessage() {}

func (x *HTTPRR) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPRR.ProtoReflect.Descriptor instead.
func (*HTTPRR) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{9}
}

func (x *HTTPRR) GetReq() *ApiAnalyzeRequest {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *HTTPRR) GetRsp() *ApiAnalyzeResponse {
	if x != nil {
		return x.Rsp
	}
	return nil
}

type ApiAnalyzeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time   int64      `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Method HTTPMethod `protobuf:"varint,2,opt,name=method,proto3,enum=passive.proto.HTTPMethod" json:"method,omitempty"`
	Uri    []byte     `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Host   []byte     `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Verion []byte     `protobuf:"bytes,5,opt,name=verion,proto3" json:"verion,omitempty"`
	Header []byte     `protobuf:"bytes,6,opt,name=header,proto3" json:"header,omitempty"`
	Body   []byte     `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ApiAnalyzeRequest) Reset() {
	*x = ApiAnalyzeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAnalyzeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAnalyzeRequest) ProtoMessage() {}

func (x *ApiAnalyzeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAnalyzeRequest.ProtoReflect.Descriptor instead.
func (*ApiAnalyzeRequest) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{10}
}

func (x *ApiAnalyzeRequest) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ApiAnalyzeRequest) GetMethod() HTTPMethod {
	if x != nil {
		return x.Method
	}
	return HTTPMethod_Unknown
}

func (x *ApiAnalyzeRequest) GetUri() []byte {
	if x != nil {
		return x.Uri
	}
	return nil
}

func (x *ApiAnalyzeRequest) GetHost() []byte {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *ApiAnalyzeRequest) GetVerion() []byte {
	if x != nil {
		return x.Verion
	}
	return nil
}

func (x *ApiAnalyzeRequest) GetHeader() []byte {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ApiAnalyzeRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type ApiAnalyzeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	StatusCode uint32 `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Verion     []byte `protobuf:"bytes,3,opt,name=verion,proto3" json:"verion,omitempty"`
	Header     []byte `protobuf:"bytes,4,opt,name=header,proto3" json:"header,omitempty"`
	Body       []byte `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ApiAnalyzeResponse) Reset() {
	*x = ApiAnalyzeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiAnalyzeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiAnalyzeResponse) ProtoMessage() {}

func (x *ApiAnalyzeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiAnalyzeResponse.ProtoReflect.Descriptor instead.
func (*ApiAnalyzeResponse) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{11}
}

func (x *ApiAnalyzeResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ApiAnalyzeResponse) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ApiAnalyzeResponse) GetVerion() []byte {
	if x != nil {
		return x.Verion
	}
	return nil
}

func (x *ApiAnalyzeResponse) GetHeader() []byte {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ApiAnalyzeResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type NetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *PassiveMsg `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *NetMsg) Reset() {
	*x = NetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetMsg) ProtoMessage() {}

func (x *NetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetMsg.ProtoReflect.Descriptor instead.
func (*NetMsg) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{12}
}

func (x *NetMsg) GetMsg() *PassiveMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type PassiveMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action Action       `protobuf:"varint,1,opt,name=action,proto3,enum=passive.proto.Action" json:"action,omitempty"`
	Data   *PassiveData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PassiveMsg) Reset() {
	*x = PassiveMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassiveMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassiveMsg) ProtoMessage() {}

func (x *PassiveMsg) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassiveMsg.ProtoReflect.Descriptor instead.
func (*PassiveMsg) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{13}
}

func (x *PassiveMsg) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_HeartBeat
}

func (x *PassiveMsg) GetData() *PassiveData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AuthMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State PassiveState `protobuf:"varint,1,opt,name=state,proto3,enum=passive.proto.PassiveState" json:"state,omitempty"`
	Token string       `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AuthMsg) Reset() {
	*x = AuthMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthMsg) ProtoMessage() {}

func (x *AuthMsg) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthMsg.ProtoReflect.Descriptor instead.
func (*AuthMsg) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{14}
}

func (x *AuthMsg) GetState() PassiveState {
	if x != nil {
		return x.State
	}
	return PassiveState_Stopped
}

func (x *AuthMsg) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type PassiveData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PassiveAssets []*PassiveAsset `protobuf:"bytes,1,rep,name=passiveAssets,proto3" json:"passiveAssets,omitempty"`
}

func (x *PassiveData) Reset() {
	*x = PassiveData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassiveData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassiveData) ProtoMessage() {}

func (x *PassiveData) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassiveData.ProtoReflect.Descriptor instead.
func (*PassiveData) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{15}
}

func (x *PassiveData) GetPassiveAssets() []*PassiveAsset {
	if x != nil {
		return x.PassiveAssets
	}
	return nil
}

type PassiveAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip     string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Tag    int32    `protobuf:"varint,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Ports  []int32  `protobuf:"varint,3,rep,packed,name=ports,proto3" json:"ports,omitempty"`
	Excpes []string `protobuf:"bytes,4,rep,name=excpes,proto3" json:"excpes,omitempty"`
}

func (x *PassiveAsset) Reset() {
	*x = PassiveAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_passive_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassiveAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassiveAsset) ProtoMessage() {}

func (x *PassiveAsset) ProtoReflect() protoreflect.Message {
	mi := &file_passive_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassiveAsset.ProtoReflect.Descriptor instead.
func (*PassiveAsset) Descriptor() ([]byte, []int) {
	return file_passive_proto_rawDescGZIP(), []int{16}
}

func (x *PassiveAsset) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PassiveAsset) GetTag() int32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *PassiveAsset) GetPorts() []int32 {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *PassiveAsset) GetExcpes() []string {
	if x != nil {
		return x.Excpes
	}
	return nil
}

var File_passive_proto protoreflect.FileDescriptor

var file_passive_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9,
	0x01, 0x0a, 0x09, 0x55, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x75,
	0x74, 0x68, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61,
	0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x2f,
	0x0a, 0x06, 0x6e, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x65, 0x74, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12,
	0x32, 0x0a, 0x07, 0x68, 0x74, 0x74, 0x70, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x54, 0x54, 0x50, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70,
	0x4d, 0x73, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x44,
	0x6f, 0x77, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x73, 0x73, 0x69, 0x76, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68,
	0x41, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x73, 0x73,
	0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x74, 0x12, 0x2f, 0x0a, 0x06,
	0x6e, 0x65, 0x74, 0x41, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x65, 0x74, 0x41, 0x63, 0x74, 0x12, 0x32, 0x0a,
	0x07, 0x68, 0x74, 0x74, 0x70, 0x41, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48,
	0x54, 0x54, 0x50, 0x41, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70, 0x41, 0x63,
	0x74, 0x42, 0x05, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x22, 0x38, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x68,
	0x41, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x06, 0x4e, 0x65, 0x74, 0x41, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70,
	0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x73, 0x73,
	0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1e, 0x0a, 0x0a, 0x4e, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x65, 0x74, 0x22, 0x38, 0x0a, 0x07, 0x48, 0x54,
	0x54, 0x50, 0x41, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x07, 0x48, 0x54, 0x54, 0x50, 0x4d, 0x73, 0x67, 0x12,
	0x34, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x54, 0x54, 0x50, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x0b, 0x48, 0x54, 0x54, 0x50, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x25, 0x0a,
	0x02, 0x72, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x73, 0x73,
	0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x52, 0x52,
	0x52, 0x02, 0x72, 0x72, 0x22, 0x56, 0x0a, 0x04, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x71, 0x0a, 0x06,
	0x48, 0x54, 0x54, 0x50, 0x52, 0x52, 0x12, 0x32, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x03, 0x72, 0x73,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x03, 0x72, 0x73, 0x70, 0x22,
	0xc4, 0x01, 0x0a, 0x11, 0x41, 0x70, 0x69, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x73, 0x73,
	0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x76, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x41, 0x70, 0x69, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x76, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x35, 0x0a, 0x06, 0x4e, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x12, 0x2b, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61,
	0x73, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x6b, 0x0a,
	0x0a, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x61,
	0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x69,
	0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x07, 0x41, 0x75,
	0x74, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x50,
	0x0a, 0x0b, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a,
	0x0d, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x22, 0x5e, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x63, 0x70,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x63, 0x70, 0x65, 0x73,
	0x2a, 0x28, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x2a, 0x63, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0x06, 0x2a,
	0x7b, 0x0a, 0x0a, 0x48, 0x54, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45,
	0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x55, 0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x05, 0x12,
	0x09, 0x0a, 0x05, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x43, 0x45,
	0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x45, 0x41, 0x44, 0x10, 0x09, 0x32, 0x5d, 0x0a, 0x0e,
	0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b,
	0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x18, 0x2e, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1a, 0x2e, 0x70, 0x61, 0x73, 0x73,
	0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0d, 0x5a, 0x0b, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_passive_proto_rawDescOnce sync.Once
	file_passive_proto_rawDescData = file_passive_proto_rawDesc
)

func file_passive_proto_rawDescGZIP() []byte {
	file_passive_proto_rawDescOnce.Do(func() {
		file_passive_proto_rawDescData = protoimpl.X.CompressGZIP(file_passive_proto_rawDescData)
	})
	return file_passive_proto_rawDescData
}

var file_passive_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_passive_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_passive_proto_goTypes = []interface{}{
	(PassiveState)(0),          // 0: passive.proto.PassiveState
	(Action)(0),                // 1: passive.proto.Action
	(HTTPMethod)(0),            // 2: passive.proto.HTTPMethod
	(*UpMessage)(nil),          // 3: passive.proto.UpMessage
	(*DownMessage)(nil),        // 4: passive.proto.DownMessage
	(*AuthAct)(nil),            // 5: passive.proto.AuthAct
	(*NetAct)(nil),             // 6: passive.proto.NetAct
	(*NetActData)(nil),         // 7: passive.proto.NetActData
	(*HTTPAct)(nil),            // 8: passive.proto.HTTPAct
	(*HTTPMsg)(nil),            // 9: passive.proto.HTTPMsg
	(*HTTPSession)(nil),        // 10: passive.proto.HTTPSession
	(*Flow)(nil),               // 11: passive.proto.Flow
	(*HTTPRR)(nil),             // 12: passive.proto.HTTPRR
	(*ApiAnalyzeRequest)(nil),  // 13: passive.proto.ApiAnalyzeRequest
	(*ApiAnalyzeResponse)(nil), // 14: passive.proto.ApiAnalyzeResponse
	(*NetMsg)(nil),             // 15: passive.proto.NetMsg
	(*PassiveMsg)(nil),         // 16: passive.proto.PassiveMsg
	(*AuthMsg)(nil),            // 17: passive.proto.AuthMsg
	(*PassiveData)(nil),        // 18: passive.proto.PassiveData
	(*PassiveAsset)(nil),       // 19: passive.proto.PassiveAsset
}
var file_passive_proto_depIdxs = []int32{
	17, // 0: passive.proto.UpMessage.authMsg:type_name -> passive.proto.AuthMsg
	15, // 1: passive.proto.UpMessage.netMsg:type_name -> passive.proto.NetMsg
	9,  // 2: passive.proto.UpMessage.httpMsg:type_name -> passive.proto.HTTPMsg
	5,  // 3: passive.proto.DownMessage.authAct:type_name -> passive.proto.AuthAct
	6,  // 4: passive.proto.DownMessage.netAct:type_name -> passive.proto.NetAct
	8,  // 5: passive.proto.DownMessage.httpAct:type_name -> passive.proto.HTTPAct
	1,  // 6: passive.proto.AuthAct.action:type_name -> passive.proto.Action
	1,  // 7: passive.proto.NetAct.action:type_name -> passive.proto.Action
	7,  // 8: passive.proto.NetAct.data:type_name -> passive.proto.NetActData
	1,  // 9: passive.proto.HTTPAct.action:type_name -> passive.proto.Action
	10, // 10: passive.proto.HTTPMsg.session:type_name -> passive.proto.HTTPSession
	11, // 11: passive.proto.HTTPSession.flow:type_name -> passive.proto.Flow
	12, // 12: passive.proto.HTTPSession.rr:type_name -> passive.proto.HTTPRR
	13, // 13: passive.proto.HTTPRR.req:type_name -> passive.proto.ApiAnalyzeRequest
	14, // 14: passive.proto.HTTPRR.rsp:type_name -> passive.proto.ApiAnalyzeResponse
	2,  // 15: passive.proto.ApiAnalyzeRequest.method:type_name -> passive.proto.HTTPMethod
	16, // 16: passive.proto.NetMsg.msg:type_name -> passive.proto.PassiveMsg
	1,  // 17: passive.proto.PassiveMsg.action:type_name -> passive.proto.Action
	18, // 18: passive.proto.PassiveMsg.data:type_name -> passive.proto.PassiveData
	0,  // 19: passive.proto.AuthMsg.state:type_name -> passive.proto.PassiveState
	19, // 20: passive.proto.PassiveData.passiveAssets:type_name -> passive.proto.PassiveAsset
	3,  // 21: passive.proto.PassiveService.PassiveStream:input_type -> passive.proto.UpMessage
	4,  // 22: passive.proto.PassiveService.PassiveStream:output_type -> passive.proto.DownMessage
	22, // [22:23] is the sub-list for method output_type
	21, // [21:22] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_passive_proto_init() }
func file_passive_proto_init() {
	if File_passive_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_passive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthAct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetAct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetActData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPAct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPRR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAnalyzeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiAnalyzeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassiveMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassiveData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_passive_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassiveAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_passive_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*UpMessage_AuthMsg)(nil),
		(*UpMessage_NetMsg)(nil),
		(*UpMessage_HttpMsg)(nil),
	}
	file_passive_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*DownMessage_AuthAct)(nil),
		(*DownMessage_NetAct)(nil),
		(*DownMessage_HttpAct)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_passive_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_passive_proto_goTypes,
		DependencyIndexes: file_passive_proto_depIdxs,
		EnumInfos:         file_passive_proto_enumTypes,
		MessageInfos:      file_passive_proto_msgTypes,
	}.Build()
	File_passive_proto = out.File
	file_passive_proto_rawDesc = nil
	file_passive_proto_goTypes = nil
	file_passive_proto_depIdxs = nil
}
